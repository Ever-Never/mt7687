


ARM Macro Assembler    Page 1 


    1 00000000         ;/* Copyright Statement:
    2 00000000         ; *
    3 00000000         ; * (C) 2005-2016  MediaTek Inc. All rights reserved.
    4 00000000         ; *
    5 00000000         ; * This software/firmware and related documentation ("M
                       ediaTek Software") are
    6 00000000         ; * protected under relevant copyright laws. The informa
                       tion contained herein
    7 00000000         ; * is confidential and proprietary to MediaTek Inc. ("M
                       ediaTek") and/or its licensors.
    8 00000000         ; * Without the prior written permission of MediaTek and
                       /or its licensors,
    9 00000000         ; * any reproduction, modification, use or disclosure of
                        MediaTek Software,
   10 00000000         ; * and information contained herein, in whole or in par
                       t, shall be strictly prohibited.
   11 00000000         ; * You may only use, reproduce, modify, or distribute (
                       as applicable) MediaTek Software
   12 00000000         ; * if you have agreed to and been bound by the applicab
                       le license agreement with
   13 00000000         ; * MediaTek ("License Agreement") and been granted expl
                       icit permission to do so within
   14 00000000         ; * the License Agreement ("Permitted User").  If you ar
                       e not a Permitted User,
   15 00000000         ; * please cease any access or use of MediaTek Software 
                       immediately.
   16 00000000         ; * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY 
                       ACKNOWLEDGES AND AGREES
   17 00000000         ; * THAT MEDIATEK SOFTWARE RECEIVED FROM MEDIATEK AND/OR
                        ITS REPRESENTATIVES
   18 00000000         ; * ARE PROVIDED TO RECEIVER ON AN "AS-IS" BASIS ONLY. M
                       EDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
   19 00000000         ; * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LI
                       MITED TO THE IMPLIED WARRANTIES OF
   20 00000000         ; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
                        NONINFRINGEMENT.
   21 00000000         ; * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVE
                       R WITH RESPECT TO THE
   22 00000000         ; * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, IN
                       CORPORATED IN, OR
   23 00000000         ; * SUPPLIED WITH MEDIATEK SOFTWARE, AND RECEIVER AGREES
                        TO LOOK ONLY TO SUCH
   24 00000000         ; * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
                        RECEIVER EXPRESSLY ACKNOWLEDGES
   25 00000000         ; * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN 
                       FROM ANY THIRD PARTY ALL PROPER LICENSES
   26 00000000         ; * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO 
                       NOT BE RESPONSIBLE FOR ANY MEDIATEK
   27 00000000         ; * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION O
                       R TO CONFORM TO A PARTICULAR
   28 00000000         ; * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIV
                       E REMEDY AND MEDIATEK'S ENTIRE AND
   29 00000000         ; * CUMULATIVE LIABILITY WITH RESPECT TO MEDIATEK SOFTWA
                       RE RELEASED HEREUNDER WILL BE,
   30 00000000         ; * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE MEDIATEK 
                       SOFTWARE AT ISSUE,
   31 00000000         ; * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARG
                       E PAID BY RECEIVER TO
   32 00000000         ; * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.



ARM Macro Assembler    Page 2 


   33 00000000         ; */
   34 00000000         
   35 00000000         ; main stack allocates at end of TCM, which is determine
                       d by scatter file
   36 00000000 00001000 
                       Stack_Size
                               EQU              0x1000
   37 00000000         
   38 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   39 00000000         Stack_Mem
                               SPACE            Stack_Size
   40 00001000         __initial_sp
   41 00001000         
   42 00001000 00000800 
                       Heap_Size
                               EQU              0x800
   43 00001000         
   44 00001000                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   45 00000000         __heap_base
   46 00000000         Heap_Mem
                               SPACE            Heap_Size
   47 00000800         __heap_limit
   48 00000800         
   49 00000800         
   50 00000800         ; Macro defines
   51 00000800 A0880000 
                       Cache_Ctrl_Base
                               EQU              0xA0880000
   52 00000800 00000000 
                       Cache_Disable
                               EQU              0x0
   53 00000800 00000003 
                       Cache_Invalid
                               EQU              0x3
   54 00000800 A2050000 
                       WDT_Base
                               EQU              0xA2050000
   55 00000800 00002200 
                       WDT_Disable
                               EQU              0x2200
   56 00000800 A0881000 
                       Remap_Base
                               EQU              0xA0881000
   57 00000800 10000023 
                       Remap_Entry_HI0
                               EQU              0x10000023
   58 00000800 00000000 
                       Remap_Entry_LO0
                               EQU              0x0
   59 00000800         
   60 00000800         
   61 00000800                 PRESERVE8
   62 00000800                 THUMB
   63 00000800         
   64 00000800         ; Vector Table Mapped to head of RAM
   65 00000800                 AREA             |.isr_vector|, DATA, READONLY
   66 00000000                 EXPORT           __Vectors



ARM Macro Assembler    Page 3 


   67 00000000                 EXPORT           __Vectors_End
   68 00000000                 EXPORT           __Vectors_Size
   69 00000000         
   70 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   71 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   72 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   73 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   74 00000010 00000000        DCD              MemManage_Handler 
                                                            ; MPU Fault Handler
                                                            
   75 00000014 00000000        DCD              BusFault_Handler 
                                                            ; Bus Fault Handler
                                                            
   76 00000018 00000000        DCD              UsageFault_Handler ; Usage Faul
                                                            t Handler
   77 0000001C 00000000        DCD              0           ; Reserved
   78 00000020 00000000        DCD              0           ; Reserved
   79 00000024 00000000        DCD              0           ; Reserved
   80 00000028 00000000        DCD              0           ; Reserved
   81 0000002C 00000000        DCD              SvcCall_Main ; SVCall Handler
   82 00000030 00000000        DCD              DebugMon_Handler ; Debug Monito
                                                            r Handler
   83 00000034 00000000        DCD              0           ; Reserved
   84 00000038 00000000        DCD              PendSV_Main ; PendSV Handler
   85 0000003C 00000000        DCD              SysTick_Main ; SysTick Handler
   86 00000040         
   87 00000040         ; External Interrupts 
   88 00000040 00000000        DCD              isrC_main   ;16:  OS timer
   89 00000044 00000000        DCD              isrC_main   ;17:  Reserved
   90 00000048 00000000        DCD              isrC_main   ;18:  Modem TOPSM
   91 0000004C 00000000        DCD              isrC_main   ;19:  CM4 TOPSM
   92 00000050 00000000        DCD              isrC_main   ;20:  Reserved
   93 00000054 00000000        DCD              isrC_main   ;21:  Reserved
   94 00000058 00000000        DCD              isrC_main   ;22:  Reserved
   95 0000005C 00000000        DCD              isrC_main   ;23:  Reserved
   96 00000060 00000000        DCD              isrC_main   ;24:  Accessory Det
                                                            ector
   97 00000064 00000000        DCD              isrC_main   ;25:  RTC
   98 00000068 00000000        DCD              isrC_main   ;26:  Keypad
   99 0000006C 00000000        DCD              isrC_main   ;27:  General Purpo
                                                            se Timer
  100 00000070 00000000        DCD              isrC_main   ;28:  External Inte
                                                            rrupt
  101 00000074 00000000        DCD              isrC_main   ;29:  LCD
  102 00000078 00000000        DCD              isrC_main   ;30:  LCD AAL
  103 0000007C 00000000        DCD              isrC_main   ;31:  DSI
  104 00000080 00000000        DCD              isrC_main   ;32:  RESIZE
  105 00000084 00000000        DCD              isrC_main   ;33:  Graphics 2D
  106 00000088 00000000        DCD              isrC_main   ;34:  Camera
  107 0000008C 00000000        DCD              isrC_main   ;35:  ROT DMA
  108 00000090 00000000        DCD              isrC_main   ;36:  SCAM
  109 00000094 00000000        DCD              isrC_main   ;37:  DMA
  110 00000098 00000000        DCD              isrC_main   ;38:  DMA always on
                                                            
  111 0000009C 00000000        DCD              isrC_main   ;39:  I2C dual
  112 000000A0 00000000        DCD              isrC_main   ;40:  I2C0



ARM Macro Assembler    Page 4 


  113 000000A4 00000000        DCD              isrC_main   ;41:  I2C1
  114 000000A8 00000000        DCD              isrC_main   ;42:  I2C2
  115 000000AC 00000000        DCD              isrC_main   ;43:  Reserved
  116 000000B0 00000000        DCD              isrC_main   ;44:  General Purpo
                                                            se Counter
  117 000000B4 00000000        DCD              isrC_main   ;45:  UART0
  118 000000B8 00000000        DCD              isrC_main   ;46:  UART1
  119 000000BC 00000000        DCD              isrC_main   ;47:  UART2
  120 000000C0 00000000        DCD              isrC_main   ;48:  UART3
  121 000000C4 00000000        DCD              isrC_main   ;49:  USB2.0
  122 000000C8 00000000        DCD              isrC_main   ;50:  MSDC0
  123 000000CC 00000000        DCD              isrC_main   ;51:  MSDC1
  124 000000D0 00000000        DCD              isrC_main   ;52:  Reserved
  125 000000D4 00000000        DCD              isrC_main   ;53:  Reserved
  126 000000D8 00000000        DCD              isrC_main   ;54:  Serial FLASH
  127 000000DC 00000000        DCD              isrC_main   ;55:  DSP22CPU
  128 000000E0 00000000        DCD              isrC_main   ;56:  Sensor DMA
  129 000000E4 00000000        DCD              isrC_main   ;57:  RGU
  130 000000E8 00000000        DCD              isrC_main   ;58:  SPI Slave
  131 000000EC 00000000        DCD              isrC_main   ;59:  SPI Master0
  132 000000F0 00000000        DCD              isrC_main   ;60:  SPI Master1
  133 000000F4 00000000        DCD              isrC_main   ;61:  SPI Master2
  134 000000F8 00000000        DCD              isrC_main   ;62:  SPI Master3
  135 000000FC 00000000        DCD              isrC_main   ;63:  TRNG
  136 00000100 00000000        DCD              isrC_main   ;64:  Bluetooth TIM
                                                            CON
  137 00000104 00000000        DCD              isrC_main   ;65:  Bluetooth IF
  138 00000108 00000000        DCD              isrC_main   ;66:  Reserved
  139 0000010C 00000000        DCD              isrC_main   ;67:  Reserved
  140 00000110 00000000        DCD              isrC_main   ;68:  LISR0
  141 00000114 00000000        DCD              isrC_main   ;69:  LISR1
  142 00000118 00000000        DCD              isrC_main   ;70:  LISR2
  143 0000011C 00000000        DCD              isrC_main   ;71:  LISR3
  144 00000120 00000000        DCD              isrC_main   ;72:  PSI Rise Edge
                                                            
  145 00000124 00000000        DCD              isrC_main   ;73:  PSI Fall Edge
                                                            
  146 00000128 00000000        DCD              isrC_main   ;74:  Reserved
  147 0000012C 00000000        DCD              isrC_main   ;75:  Reserved
  148 00000130 00000000        DCD              isrC_main   ;76:  PSI Fall Edge
                                                            
  149 00000134 00000000        DCD              isrC_main   ;77:  Reserved
  150 00000138 00000000        DCD              isrC_main   ;78:  Reserved
  151 0000013C 00000000        DCD              isrC_main   ;79:  Reserved
  152 00000140         
  153 00000140         
  154 00000140         __Vectors_End
  155 00000140         
  156 00000140 00000140 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  157 00000140         
  158 00000140                 AREA             |.reset_handler|, CODE, READONL
Y
  159 00000000         
  160 00000000         
  161 00000000         ; Reset handler
  162 00000000         Reset_Handler
                               PROC



ARM Macro Assembler    Page 5 


  163 00000000                 EXPORT           Reset_Handler             [WEAK
]
  164 00000000                 IMPORT           SystemInit
  165 00000000                 IMPORT           __main
  166 00000000                 IMPORT           |Image$$STACK$$ZI$$Base|
  167 00000000                 IMPORT           |Image$$STACK$$ZI$$Limit|
  168 00000000         
  169 00000000         
  170 00000000         ;set stack pointer
  171 00000000 F8DF D03C       LDR              SP, =|Image$$STACK$$ZI$$Limit|
  172 00000004         
  173 00000004         ;interrupt disable
  174 00000004 B672            CPSID            I
  175 00000006         
  176 00000006         ;cache disable, make region init safer
  177 00000006 2000            MOVS             R0, #Cache_Disable
  178 00000008 2103            MOVS             R1, #Cache_Invalid
  179 0000000A 4A0E            LDR              R2, =Cache_Ctrl_Base
  180 0000000C F842 0B04       STR              R0, [R2], #4
  181 00000010 6011            STR              R1, [R2, #0]
  182 00000012         
  183 00000012         ;watch dog disable
  184 00000012 480D            LDR              R0, =WDT_Base
  185 00000014 F44F 5108       LDR              R1, =WDT_Disable
  186 00000018 6001            STR              R1, [R0, #0]
  187 0000001A         
  188 0000001A         ;make virtual space available
  189 0000001A 480C            LDR              R0, =Remap_Entry_HI0
  190 0000001C F04F 0100       LDR              R1, =Remap_Entry_LO0
  191 00000020 4A0B            LDR              R2, =Remap_Base
  192 00000022 F842 0B04       STR              R0, [R2], #4
  193 00000026 6011            STR              R1, [R2, #0]
  194 00000028         
  195 00000028         ;stack space zero init
  196 00000028 2000            MOVS             R0, #0
  197 0000002A 490A            LDR              R1, =|Image$$STACK$$ZI$$Base|
  198 0000002C 4A04            LDR              R2, =|Image$$STACK$$ZI$$Limit|
  199 0000002E         FillZero
  200 0000002E F841 0B04       STR              R0, [R1], #4
  201 00000032 4291            CMP              R1, R2
  202 00000034 D3FB            BCC              FillZero
  203 00000036         
  204 00000036         ;Call the clock system intitialization function
  205 00000036 4808            LDR              R0, =SystemInit
  206 00000038 4780            BLX              R0
  207 0000003A         
  208 0000003A         ;Call the application's entry point
  209 0000003A 4808            LDR              R0, =__main
  210 0000003C 4700            BX               R0
  211 0000003E BF00            NOP
  212 00000040                 ENDP
  213 00000040         
  214 00000040 00000000 
              A0880000 
              A2050000 
              10000023 
              A0881000 
              00000000 
              00000000 



ARM Macro Assembler    Page 6 


              00000000         AREA             |.ram_code|, CODE, READONLY
  215 00000000         SvcCall_Main
                               PROC
  216 00000000                 EXPORT           SvcCall_Main
  217 00000000                 IMPORT           Flash_ReturnReady
  218 00000000 B672            CPSID            I
  219 00000002 B500            PUSH             {LR}
  220 00000004 4803            LDR              R0, =Flash_ReturnReady
  221 00000006 4780            BLX              R0
  222 00000008 F85D EB04       POP              {LR}
  223 0000000C B662            CPSIE            I
  224 0000000E 4802            LDR              R0, =SVC_Handler
  225 00000010 4700            BX               R0
  226 00000012 BF00            NOP
  227 00000014                 ENDP
  228 00000014         
  229 00000014 00000000 
              00000000         AREA             |.ram_code|, CODE, READONLY
  230 0000001C         PendSV_Main
                               PROC
  231 0000001C                 EXPORT           PendSV_Main
  232 0000001C                 IMPORT           Flash_ReturnReady
  233 0000001C B672            CPSID            I
  234 0000001E B500            PUSH             {LR}
  235 00000020 4803            LDR              R0, =Flash_ReturnReady
  236 00000022 4780            BLX              R0
  237 00000024 F85D EB04       POP              {LR}
  238 00000028 B662            CPSIE            I
  239 0000002A 4802            LDR              R0, =PendSV_Handler
  240 0000002C 4700            BX               R0
  241 0000002E BF00            NOP
  242 00000030                 ENDP
  243 00000030         
  244 00000030 00000000 
              00000000         AREA             |.ram_code|, CODE, READONLY
  245 00000038         SysTick_Main
                               PROC
  246 00000038                 EXPORT           SysTick_Main
  247 00000038                 IMPORT           Flash_ReturnReady
  248 00000038 B672            CPSID            I
  249 0000003A B500            PUSH             {LR}
  250 0000003C 4808            LDR              R0, =Flash_ReturnReady
  251 0000003E 4780            BLX              R0
  252 00000040 B662            CPSIE            I
  253 00000042 4808            LDR              R0, =SysTick_Handler
  254 00000044 4780            BLX              R0
  255 00000046 F85D EB04       POP              {LR}
  256 0000004A 4770            BX               LR
  257 0000004C                 ENDP
  258 0000004C         
  259 0000004C         isrC_main
                               PROC
  260 0000004C                 EXPORT           isrC_main                  [WEA
K]
  261 0000004C E7FE            B                .
  262 0000004E                 ENDP
  263 0000004E         
  264 0000004E         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)



ARM Macro Assembler    Page 7 


  265 0000004E         
  266 0000004E         NMI_Handler
                               PROC
  267 0000004E                 EXPORT           NMI_Handler                [WEA
K]
  268 0000004E E7FE            B                .
  269 00000050                 ENDP
  271 00000050         HardFault_Handler
                               PROC
  272 00000050                 EXPORT           HardFault_Handler          [WEA
K]
  273 00000050 E7FE            B                .
  274 00000052                 ENDP
  276 00000052         MemManage_Handler
                               PROC
  277 00000052                 EXPORT           MemManage_Handler          [WEA
K]
  278 00000052 E7FE            B                .
  279 00000054                 ENDP
  281 00000054         BusFault_Handler
                               PROC
  282 00000054                 EXPORT           BusFault_Handler           [WEA
K]
  283 00000054 E7FE            B                .
  284 00000056                 ENDP
  286 00000056         UsageFault_Handler
                               PROC
  287 00000056                 EXPORT           UsageFault_Handler         [WEA
K]
  288 00000056 E7FE            B                .
  289 00000058                 ENDP
  290 00000058         SVC_Handler
                               PROC
  291 00000058                 EXPORT           SVC_Handler                [WEA
K]
  292 00000058 E7FE            B                .
  293 0000005A                 ENDP
  295 0000005A         DebugMon_Handler
                               PROC
  296 0000005A                 EXPORT           DebugMon_Handler           [WEA
K]
  297 0000005A E7FE            B                .
  298 0000005C                 ENDP
  299 0000005C         PendSV_Handler
                               PROC
  300 0000005C                 EXPORT           PendSV_Handler             [WEA
K]
  301 0000005C E7FE            B                .
  302 0000005E                 ENDP
  303 0000005E         SysTick_Handler
                               PROC
  304 0000005E                 EXPORT           SysTick_Handler            [WEA
K]
  305 0000005E E7FE            B                .
  306 00000060                 ENDP
  307 00000060         
  308 00000060                 ALIGN
  309 00000060         
  310 00000060         ;*******************************************************



ARM Macro Assembler    Page 8 


                       ************************
  311 00000060         ; User Stack and Heap initialization
  312 00000060         ;*******************************************************
                       ************************
  313 00000060                 IF               :DEF:__MICROLIB
  314 00000060         
  315 00000060                 EXPORT           __initial_sp
  316 00000060                 EXPORT           __heap_base
  317 00000060                 EXPORT           __heap_limit
  318 00000060         
  319 00000060                 ELSE
  334                          ENDIF
  335 00000060         
  336 00000060                 END
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=..\..\..\..\..\out_keil\mt2523_hdk\battery_management_get_statu
s\battery_management_get_status\startup_mt2523.d -o..\..\..\..\..\out_keil\mt25
23_hdk\battery_management_get_status\battery_management_get_status\startup_mt25
23.o -IZ:\gva\project\mt2523_hdk\apps\battery_management_get_status\MDK-ARM\RTE
 -IC:\Keil_v5\ARM\PACK\MediaTek\MTx\3.3.0\driver\CMSIS\Device\MTK\mt2523\Includ
e -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__MICROLIB SETA 1" --predefine="_
_UVISION_VERSION SETA 515" --list=.\listings\startup_mt2523.lst startup_mt2523.
s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 38 in file startup_mt2523.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 39 in file startup_mt2523.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00001000

Symbol: __initial_sp
   Definitions
      At line 40 in file startup_mt2523.s
   Uses
      At line 70 in file startup_mt2523.s
      At line 315 in file startup_mt2523.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 44 in file startup_mt2523.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 46 in file startup_mt2523.s
   Uses
      None
Comment: Heap_Mem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 45 in file startup_mt2523.s
   Uses
      At line 316 in file startup_mt2523.s
Comment: __heap_base used once
__heap_limit 00000800

Symbol: __heap_limit
   Definitions
      At line 47 in file startup_mt2523.s
   Uses
      At line 317 in file startup_mt2523.s
Comment: __heap_limit used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.isr_vector 00000000

Symbol: .isr_vector
   Definitions
      At line 65 in file startup_mt2523.s
   Uses
      None
Comment: .isr_vector unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 70 in file startup_mt2523.s
   Uses
      At line 66 in file startup_mt2523.s
      At line 156 in file startup_mt2523.s

__Vectors_End 00000140

Symbol: __Vectors_End
   Definitions
      At line 154 in file startup_mt2523.s
   Uses
      At line 67 in file startup_mt2523.s
      At line 156 in file startup_mt2523.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.reset_handler 00000000

Symbol: .reset_handler
   Definitions
      At line 158 in file startup_mt2523.s
   Uses
      None
Comment: .reset_handler unused
FillZero 0000002E

Symbol: FillZero
   Definitions
      At line 199 in file startup_mt2523.s
   Uses
      At line 202 in file startup_mt2523.s
Comment: FillZero used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 162 in file startup_mt2523.s
   Uses
      At line 71 in file startup_mt2523.s
      At line 163 in file startup_mt2523.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ram_code 00000000

Symbol: .ram_code
   Definitions
      At line 214 in file startup_mt2523.s
   Uses
      None
Comment: .ram_code unused
BusFault_Handler 00000054

Symbol: BusFault_Handler
   Definitions
      At line 281 in file startup_mt2523.s
   Uses
      At line 75 in file startup_mt2523.s
      At line 282 in file startup_mt2523.s

DebugMon_Handler 0000005A

Symbol: DebugMon_Handler
   Definitions
      At line 295 in file startup_mt2523.s
   Uses
      At line 82 in file startup_mt2523.s
      At line 296 in file startup_mt2523.s

HardFault_Handler 00000050

Symbol: HardFault_Handler
   Definitions
      At line 271 in file startup_mt2523.s
   Uses
      At line 73 in file startup_mt2523.s
      At line 272 in file startup_mt2523.s

MemManage_Handler 00000052

Symbol: MemManage_Handler
   Definitions
      At line 276 in file startup_mt2523.s
   Uses
      At line 74 in file startup_mt2523.s
      At line 277 in file startup_mt2523.s

NMI_Handler 0000004E

Symbol: NMI_Handler
   Definitions
      At line 266 in file startup_mt2523.s
   Uses
      At line 72 in file startup_mt2523.s
      At line 267 in file startup_mt2523.s

PendSV_Handler 0000005C

Symbol: PendSV_Handler
   Definitions
      At line 299 in file startup_mt2523.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 239 in file startup_mt2523.s
      At line 300 in file startup_mt2523.s

PendSV_Main 0000001C

Symbol: PendSV_Main
   Definitions
      At line 230 in file startup_mt2523.s
   Uses
      At line 84 in file startup_mt2523.s
      At line 231 in file startup_mt2523.s

SVC_Handler 00000058

Symbol: SVC_Handler
   Definitions
      At line 290 in file startup_mt2523.s
   Uses
      At line 224 in file startup_mt2523.s
      At line 291 in file startup_mt2523.s

SvcCall_Main 00000000

Symbol: SvcCall_Main
   Definitions
      At line 215 in file startup_mt2523.s
   Uses
      At line 81 in file startup_mt2523.s
      At line 216 in file startup_mt2523.s

SysTick_Handler 0000005E

Symbol: SysTick_Handler
   Definitions
      At line 303 in file startup_mt2523.s
   Uses
      At line 253 in file startup_mt2523.s
      At line 304 in file startup_mt2523.s

SysTick_Main 00000038

Symbol: SysTick_Main
   Definitions
      At line 245 in file startup_mt2523.s
   Uses
      At line 85 in file startup_mt2523.s
      At line 246 in file startup_mt2523.s

UsageFault_Handler 00000056

Symbol: UsageFault_Handler
   Definitions
      At line 286 in file startup_mt2523.s
   Uses
      At line 76 in file startup_mt2523.s
      At line 287 in file startup_mt2523.s

isrC_main 0000004C




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: isrC_main
   Definitions
      At line 259 in file startup_mt2523.s
   Uses
      At line 88 in file startup_mt2523.s
      At line 89 in file startup_mt2523.s
      At line 90 in file startup_mt2523.s
      At line 91 in file startup_mt2523.s
      At line 92 in file startup_mt2523.s
      At line 93 in file startup_mt2523.s
      At line 94 in file startup_mt2523.s
      At line 95 in file startup_mt2523.s
      At line 96 in file startup_mt2523.s
      At line 97 in file startup_mt2523.s
      At line 98 in file startup_mt2523.s
      At line 99 in file startup_mt2523.s
      At line 100 in file startup_mt2523.s
      At line 101 in file startup_mt2523.s
      At line 102 in file startup_mt2523.s
      At line 103 in file startup_mt2523.s
      At line 104 in file startup_mt2523.s
      At line 105 in file startup_mt2523.s
      At line 106 in file startup_mt2523.s
      At line 107 in file startup_mt2523.s
      At line 108 in file startup_mt2523.s
      At line 109 in file startup_mt2523.s
      At line 110 in file startup_mt2523.s
      At line 111 in file startup_mt2523.s
      At line 112 in file startup_mt2523.s
      At line 113 in file startup_mt2523.s
      At line 114 in file startup_mt2523.s
      At line 115 in file startup_mt2523.s
      At line 116 in file startup_mt2523.s
      At line 117 in file startup_mt2523.s
      At line 118 in file startup_mt2523.s
      At line 119 in file startup_mt2523.s
      At line 120 in file startup_mt2523.s
      At line 121 in file startup_mt2523.s
      At line 122 in file startup_mt2523.s
      At line 123 in file startup_mt2523.s
      At line 124 in file startup_mt2523.s
      At line 125 in file startup_mt2523.s
      At line 126 in file startup_mt2523.s
      At line 127 in file startup_mt2523.s
      At line 128 in file startup_mt2523.s
      At line 129 in file startup_mt2523.s
      At line 130 in file startup_mt2523.s
      At line 131 in file startup_mt2523.s
      At line 132 in file startup_mt2523.s
      At line 133 in file startup_mt2523.s
      At line 134 in file startup_mt2523.s
      At line 135 in file startup_mt2523.s
      At line 136 in file startup_mt2523.s
      At line 137 in file startup_mt2523.s
      At line 138 in file startup_mt2523.s
      At line 139 in file startup_mt2523.s
      At line 140 in file startup_mt2523.s
      At line 141 in file startup_mt2523.s
      At line 142 in file startup_mt2523.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 143 in file startup_mt2523.s
      At line 144 in file startup_mt2523.s
      At line 145 in file startup_mt2523.s
      At line 146 in file startup_mt2523.s
      At line 147 in file startup_mt2523.s
      At line 148 in file startup_mt2523.s
      At line 149 in file startup_mt2523.s
      At line 150 in file startup_mt2523.s
      At line 151 in file startup_mt2523.s
      At line 260 in file startup_mt2523.s

14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Cache_Ctrl_Base A0880000

Symbol: Cache_Ctrl_Base
   Definitions
      At line 51 in file startup_mt2523.s
   Uses
      At line 179 in file startup_mt2523.s
Comment: Cache_Ctrl_Base used once
Cache_Disable 00000000

Symbol: Cache_Disable
   Definitions
      At line 52 in file startup_mt2523.s
   Uses
      At line 177 in file startup_mt2523.s
Comment: Cache_Disable used once
Cache_Invalid 00000003

Symbol: Cache_Invalid
   Definitions
      At line 53 in file startup_mt2523.s
   Uses
      At line 178 in file startup_mt2523.s
Comment: Cache_Invalid used once
Heap_Size 00000800

Symbol: Heap_Size
   Definitions
      At line 42 in file startup_mt2523.s
   Uses
      At line 46 in file startup_mt2523.s
Comment: Heap_Size used once
Remap_Base A0881000

Symbol: Remap_Base
   Definitions
      At line 56 in file startup_mt2523.s
   Uses
      At line 191 in file startup_mt2523.s
Comment: Remap_Base used once
Remap_Entry_HI0 10000023

Symbol: Remap_Entry_HI0
   Definitions
      At line 57 in file startup_mt2523.s
   Uses
      At line 189 in file startup_mt2523.s
Comment: Remap_Entry_HI0 used once
Remap_Entry_LO0 00000000

Symbol: Remap_Entry_LO0
   Definitions
      At line 58 in file startup_mt2523.s
   Uses
      At line 190 in file startup_mt2523.s
Comment: Remap_Entry_LO0 used once
Stack_Size 00001000

Symbol: Stack_Size



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 36 in file startup_mt2523.s
   Uses
      At line 39 in file startup_mt2523.s
Comment: Stack_Size used once
WDT_Base A2050000

Symbol: WDT_Base
   Definitions
      At line 54 in file startup_mt2523.s
   Uses
      At line 184 in file startup_mt2523.s
Comment: WDT_Base used once
WDT_Disable 00002200

Symbol: WDT_Disable
   Definitions
      At line 55 in file startup_mt2523.s
   Uses
      At line 185 in file startup_mt2523.s
Comment: WDT_Disable used once
__Vectors_Size 00000140

Symbol: __Vectors_Size
   Definitions
      At line 156 in file startup_mt2523.s
   Uses
      At line 68 in file startup_mt2523.s
Comment: __Vectors_Size used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Flash_ReturnReady 00000000

Symbol: Flash_ReturnReady
   Definitions
      At line 217 in file startup_mt2523.s
      At line 232 in file startup_mt2523.s
      At line 247 in file startup_mt2523.s
   Uses
      At line 220 in file startup_mt2523.s
      At line 235 in file startup_mt2523.s
      At line 250 in file startup_mt2523.s
Warning: Flash_ReturnReady multiply defined
Image$$STACK$$ZI$$Base 00000000

Symbol: Image$$STACK$$ZI$$Base
   Definitions
      At line 166 in file startup_mt2523.s
   Uses
      At line 197 in file startup_mt2523.s
Comment: Image$$STACK$$ZI$$Base used once
Image$$STACK$$ZI$$Limit 00000000

Symbol: Image$$STACK$$ZI$$Limit
   Definitions
      At line 167 in file startup_mt2523.s
   Uses
      At line 171 in file startup_mt2523.s
      At line 198 in file startup_mt2523.s

SystemInit 00000000

Symbol: SystemInit
   Definitions
      At line 164 in file startup_mt2523.s
   Uses
      At line 205 in file startup_mt2523.s
Comment: SystemInit used once
__main 00000000

Symbol: __main
   Definitions
      At line 165 in file startup_mt2523.s
   Uses
      At line 209 in file startup_mt2523.s
Comment: __main used once
5 symbols
384 symbols in table
