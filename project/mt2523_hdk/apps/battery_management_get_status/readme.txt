/* Copyright Statement:
 *
 * (C) 2005-2016  MediaTek Inc. All rights reserved.
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to MediaTek Inc. ("MediaTek") and/or its licensors.
 * Without the prior written permission of MediaTek and/or its licensors,
 * any reproduction, modification, use or disclosure of MediaTek Software,
 * and information contained herein, in whole or in part, shall be strictly prohibited.
 * You may only use, reproduce, modify, or distribute (as applicable) MediaTek Software
 * if you have agreed to and been bound by the applicable license agreement with
 * MediaTek ("License Agreement") and been granted explicit permission to do so within
 * the License Agreement ("Permitted User").  If you are not a Permitted User,
 * please cease any access or use of MediaTek Software immediately.
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT MEDIATEK SOFTWARE RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES
 * ARE PROVIDED TO RECEIVER ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
 * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
 * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
 * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
 * SUPPLIED WITH MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
 * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
 * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
 * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
 * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
 * CUMULATIVE LIABILITY WITH RESPECT TO MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
 * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE MEDIATEK SOFTWARE AT ISSUE,
 * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
 * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 */

/**
  * @page battery management example project
  * @{

@par Overview

 - Example project description
  - This example project demonstrates how to use the battery management APIs to capture batery information such as capacity, temperature, etc.
 - Features of the example project
  - This example project demonstrates how to get the battery status.
 - Process / procedure of the example project
  - Battery management is enabled to measure the battery status.
 - Output from the example
  - Log will show when battery information are received.

@par Hardware and Software environment

  - Supported platform
   - LinkIt 2523 HDK.

  - Hardware environment
   - Need a battery used to power on the device
   - Adapter or usb cable to charger the battery
   - Connect the jumper J2001 pins to 1-2 set the power source from battery connector.The configuration details can be found at the “Hardware Feature Configuration” of the LinkIt 2523 HDK user guides.

  - PC/environment configuration
   - A serial tool is required, such as hyper terminal, for UART logging.
   - COM port settings. baudrate: 115200, data bits: 8, stop bit: 1, parity: none and flow control: off.

@par Directory contents
  - Source and header files
   - battery_management_get_status/src/main.c                            Main program.
   - battery_management_get_status/src/battery_message.c                 Battery message process program.
   - battery_management_get_status/src/system_mt2523.c                   The configuration file of the Cortex-M4 with floating point core registers and system clock.
   - battery_management_get_status/src/sys_init.c                        This file initializes the basic hardware environment for the system, including system clock, UART port for logging, Pinmux, cache and other necessary hardware.
   - battery_management_get_status/src/ept_eint_var.c                    The EINT configuration file generated by Easy Pinmux Tool(EPT). Please do not edit the file.
   - battery_management_get_status/src/ept_gpio_var.c                    The GPIO configuration file generated by Easy Pinmux Tool(EPT). Please do not edit the file.
   - battery_management_get_status/inc/FreeRTOSConfig.h                  FreeRTOS feature configuration file.
   - battery_management_get_status/inc/hal_feature_config.h              MT2523x's feature configuration file.
   - battery_management_get_status/inc/memory_map.h                      MT2523x's memory layout symbol file.
   - battery_management_get_status/inc/ept_eint_drv.h                    The EINT configuration file generated by Easy Pinmux Tool(EPT). Please do not edit the file.
   - battery_management_get_status/inc/ept_gpio_drv.h                    The GPIO configuration file generated by Easy Pinmux Tool(EPT). Please do not edit the file.
   - battery_management_get_status/inc/ept_keypad_drv.h                  The KEYPAD configuration file generated by Easy Pinmux Tool(EPT). Please do not edit the file.
   - battery_management_get_status/inc/cust_battery_meter.h              The customization file to configure the battery level parameters.
   - battery_management_get_status/inc/cust_battery_meter_table.h        The customization file to configure the battery meter parameters.
   - battery_management_get_status/inc/cust_battery_temperature_table.h  The customization file to configure the battery temperature parameters.
   - battery_management_get_status/inc/cust_charging.h                   The customization file to configure the charging parameters.
   - battery_management_get_status/inc/sys_init.h                        The header file of sys_init.c.
   - battery_management_get_status/inc/battery_message.h                 The header file of battery_message.c.
   - battery_management_get_status/GCC/startup_mt2523.s                  MT2523x's startup file for GCC.
   - battery_management_get_status/GCC/syscalls.c                        The minimal implementation of the system calls.
   - battery_management_get_status/MDK-ARM/startup_mt2523.s              MT2523x's startup file for Keil.

  - Project configuration files using GCC
   - battery_management_get_status/GCC/feature.mk                        Feature configuration.
   - battery_management_get_status/GCC/Makefile                          Makefile.
   - battery_management_get_status/GCC/flash.ld                          Linker script.

  - Project configuration files using Keil
   - battery_management_get_status/MDK-ARM/battery_management_get_status.uvprojx   uVision5 Project File. Contains the project structure in XML format.
   - battery_management_get_status/MDK-ARM/battery_management_get_status.uvoptx    uVision5 project options. Contains the settings for the debugger, trace configuration, breakpoints, currently opened files, etc.
   - battery_management_get_status/MDK-ARM/flash.sct                               Linker script.

@par Run the example
  - Connect board to PC with serial port cable.
  - Build the example project with the command, "./build.sh mt2523_hdk battery_management_get_status" from the SDK root folder and download the bin file to LinkIt 2523 development board.
  - Run the example. The log will periodically show battery and charging information.

* @}
*/
